var documenterSearchIndex = {"docs":
[{"location":"data_structure/overview.html#Data-Structure","page":"Overview","title":"Data Structure","text":"","category":"section"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"WAVI.jl uses a hierachical data structure, which is shown schematically below. This page provides a brief overview of each of these structures; you can find out more information about each of these via the tabs in the sidebar.","category":"page"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"(Image: image info)","category":"page"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"At the top of the hierarchy are Simulations. Simulations are to be ran! A Simulation object must be passed the sub-structures describing the following (terms in brackets are the names of the corresponding structures in WAVI.jl):","category":"page"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"Model (Model):  contains all the information about the current state, parameters, initial conditions, and process parametrizations (see below).\nTimestepping Parameters (TimesteppingParams): contains parameters relating to timestepping (e.g. timestep, number of timesteps etc)\nOutput Parameters (OutputParams): optional structure that contains information relativng to the outputting of solutions (what to output, when to output etc).","category":"page"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"A Model structure contains sub-structures describing the following:","category":"page"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"Grid (Grid): contains information on the discretization of the model domain (e.g. number of grid cells, grid spacing etc)\nPhysical parameters (Params): contains physical parameters (e.g. density of the ice)\nSolver parameters (SolverParams): contains parameters relating to the velocity solver (e.g. maximum number of iterations)\nInitial conditions (InitialConditions): stores initial conditions relating to the ice sheet.\nFields (Fields): stores information on the current state of the model.","category":"page"},{"location":"data_structure/overview.html","page":"Overview","title":"Overview","text":"A Model also owns a dict named extra_physics, which contains information on parametrizations of physical processes used by the model. See the Parametrizations tab on the left for more information.","category":"page"},{"location":"installation_instructions.html#Installation-instructions","page":"Installation instructions","title":"Installation instructions","text":"","category":"section"},{"location":"installation_instructions.html","page":"Installation instructions","title":"Installation instructions","text":"You can install the latest version of Oceananigans using the built-in package manager (accessed by pressing ] in the Julia command prompt) to add the package and instantiate/build all dependencies","category":"page"},{"location":"installation_instructions.html","page":"Installation instructions","title":"Installation instructions","text":"julia>]\r\n(v1.6) pkg> add https://github.com/RJArthern/WAVI.jl\r\n(v1.6) pkg> instantiate","category":"page"},{"location":"installation_instructions.html","page":"Installation instructions","title":"Installation instructions","text":"Note that WAVI is only tested on Julia versions 1.5 and newer; stability cannot be guaranteed on newer versions!","category":"page"},{"location":"installation_instructions.html","page":"Installation instructions","title":"Installation instructions","text":"At this time, updating should be done with care, as WAVI is under rapid development. While we take care to avoid breaking changes, they may happen during this time. If anything does break, please open an issue and let us know!","category":"page"},{"location":"data_structure/model.html#Models","page":"Models","title":"Models","text":"","category":"section"},{"location":"data_structure/model.html","page":"Models","title":"Models","text":"A Model is a WAVI.jl strcutures that contain all the information about the current state, parameters, initial conditions, and process parametrizations. An instance of a Model contains the following fields:","category":"page"},{"location":"data_structure/model.html","page":"Models","title":"Models","text":"grid: an instance of a WAVI.jl Grid object, that stores information about the numerical grid.\nparams: an instance of a WAVI.jl Params object that stores phyiscal parameters that enter the model.\nsolver_params: an instance of a WAVI.jl SolverParams object that stores parameters relating to the numerical solution of the governing equations (see numerical implementation).\ninitial_conditions: an instance of a WAVI.jl InitialConditions object that stores initial data on the ice thickness, ice viscosity, ice temperature, and ice damage.\nfields: an instance of a WAVI.jl Fields structure that stores information relating to the current state of the model on the various grids used in the solution (see numerical implementation for more information on these grids)\nextra_physics: a dictionary that stores process parametrizations used in the ice sheet model (see process parametrizations for more information).","category":"page"},{"location":"data_structure/model.html#Model-Construction","page":"Models","title":"Model Construction","text":"","category":"section"},{"location":"data_structure/model.html","page":"Models","title":"Models","text":"A Model is constructed using the Model(;<kwargs>) constructor (a function that constructs an instance of a Model). Here <kwargs> is shorthand for keyword arguments, allow the Model to be configured, some are optional and others are not (see below):","category":"page"},{"location":"data_structure/model.html","page":"Models","title":"Models","text":"Model()","category":"page"},{"location":"data_structure/model.html#WAVI.Model-Tuple{}","page":"Models","title":"WAVI.Model","text":"Model constructor\n\n\n\n\n\n","category":"method"},{"location":"index.html#WAVI.jl-documentation","page":"Home","title":"WAVI.jl documentation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"WAVI.jl is an ice sheet model for everyone.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"It is fast and detailed enough for use in research, yet friendly enough for students and first time programmers.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Index","page":"Home","title":"Index","text":"","category":"section"}]
}
